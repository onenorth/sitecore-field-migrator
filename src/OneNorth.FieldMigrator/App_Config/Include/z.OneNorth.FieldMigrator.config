<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/">
  <sitecore>
    <!-- FIELD MIGRATOR
      This section holds common general Field Migrator configuration 
      -->
    <fieldmigrator type="OneNorth.FieldMigrator.Configuration.FieldMigratorConfiguration, OneNorth.FieldMigrator">
      <!-- SOURCE ENDPOINT ADDRESS
             This is the the path to the Hard Rocks web service installed on the source instance
        -->
      <sourceEndpointAddress>http://sidley/sitecore/shell/webservice/service2.asmx</sourceEndpointAddress>
      <!-- SOURCE DATABASE
             This is the name of the database to pull the data from on the source instance
        -->
      <sourceDatabase>master</sourceDatabase>
      <!-- SOURCE USERNAME
             This is the user name for the credentials used to pull data from the source instance
        -->
      <sourceUserName>sitecore\admin</sourceUserName>
      <!-- SOURCE PASSWORD
             This is the password for the credentials used to pull data from the source instance
        -->
      <sourcePassword>b</sourcePassword>
      <!-- TARGET DATABASE
             This is the name of the database to save the migrated data to in the target instance
        -->
      <targetDatabase>master</targetDatabase>
      <!-- TARGET USERNAME
             This is user name used to save the migrated data in the target instance
        -->
      <targetUserName>sitecore\admin</targetUserName>
      <!-- INCLUDE ROOTS
             Data is extracted out of the source system starting from root nodes.
             This is the list of root nodes to extract data.
             All descendants of the root nodes are included.
        -->
      <includeRoots hint="raw:AddRoot">
        <root name="Events" id="{8F900BE3-A666-4883-811E-704873056D3F}" />
        <root name="News" id="{6308F465-D295-478F-9EB2-16B8E089C969}" />
        <root name="Offices" id="{420087BC-717C-4178-B5ED-4C652153E75A}" />
        <root name="People" id="{B47F2DB2-835E-4444-BD03-0A45617CEBB4}" />
        <root name="Publications" id="{C66F235E-D842-4D60-B597-F3D7C1337194}" />
        <root name="Services" id="{4226BEFA-4AAC-4859-9B21-B363883BEFA9}" />
      </includeRoots>
      <!-- INCLUDE TEMPLATES
             This setting allows you to speficify the templates that should be migrated from the source to the target instances.
             You can optionally indicated that all descendants are automatically included if the parent is based on the indicated template.
        -->
      <includeTemplates hint="raw:AddTemplateInclude">
        <lawyer sourceTemplateId="{EDC84A99-541A-4544-B408-D276600C66F0}" includeAllDescendants="true" />
        <otherProfessional sourceTemplateId="{98EA6204-4747-41A8-94F1-D08F98D679BA}" includeAllDescendants="true" />
        <staff sourceTemplateId="{0C275F5D-7873-44C8-AC00-A1CA8082B5F6}" includeAllDescendants="true" />
        <professionalFolder sourceTemplateId="{70EE9EE9-D950-43AF-BDBF-A0EA4DAA598D}" includeAllDescendants="false" />

        <news sourceTemplateId="{DBB4C9D1-B36C-4588-B283-E8407FC49C7D}" includeAllDescendants="true" />
        <newsFolder sourceTemplateId="{C5B34A8D-6DD7-4407-AFE5-503FCE0F5C03}" includeAllDescendants="false" />

        <event sourceTemplateId="{E47E40AF-B7C0-49AF-902F-EB8741BC6463}" includeAllDescendants="true" />
        <eventFolder sourceTemplateId="{12815912-2CB9-41E0-964D-95E00CB71C60}" includeAllDescendants="false" />
        
        <publication sourceTemplateId="{9CBFE518-3BC0-4632-AE13-6AC9CEE8EB31}" includeAllDescendants="true" />
        <publicationFolder sourceTemplateId="{998376B0-0461-496E-970B-21111D4DCC0A}" includeAllDescendants="false" />

        <office sourceTemplateId="{C82727A4-5BA4-42CC-B06C-7AA17DD25044}" includeAllDescendants="true" />
        <service sourceTemplateId="{CA303F17-B62F-4B61-A634-DB7EC0E98D35}" includeAllDescendants="true" />
      </includeTemplates>
      <!-- EXCLUDE TEMPLATES 
             By default, items are only migrated if their template has been included above.
             There may be cases where includeAllDescendants is set to true, and some decendents should be excluded based on template.
             This setting allows you to exclude items based on template.
        -->
      <excludeTemplates hint="raw:AddTemplateExclude">
        <name sourceTemplateId="{00000000-0000-0000-0000-000000000000}" />
      </excludeTemplates>
      <!-- MEDIA ITEM TEMPLATE IDS
             This is a list of template ids that are media.
             The migrator uses this list to detect media items.
             This list should not need to be updated unless a new media type is created.
        -->
      <mediaItemTemplateIds hint="list:AddMediaItemTemplateId">
        <unversioned-audio>{D56DB3AA-7373-4651-837E-8D3977A0B544}</unversioned-audio>
        <unversioned-doc>{16692733-9A61-45E6-B0D4-4C0C06F8DD3C}</unversioned-doc>
        <unversioned-document>{777F0C76-D712-46EA-9F40-371ACDA18A1C}</unversioned-document>
        <unversioned-docx>{7BB0411F-50CD-4C21-AD8F-1FCDE7C3AFFE}</unversioned-docx>
        <unversioned-file>{962B53C4-F93B-4DF9-9821-415C867B8903}</unversioned-file>
        <unversioned-flash>{9867C0B9-A7BE-4D96-AD7E-4AD18109ED20}</unversioned-flash>
        <unversioned-image>{F1828A2C-7E5D-4BBD-98CA-320474871548}</unversioned-image>
        <unversioned-jpeg>{DAF085E8-602E-43A6-8299-038FF171349F}</unversioned-jpeg>
        <unversioned-movie>{E76ADBDF-87D1-4FCB-BA71-274F7DBF5670}</unversioned-movie>
        <unversioned-mp3>{B60424A5-CE06-4C2E-9F49-A6D732F55D4B}</unversioned-mp3>
        <unversioned-pdf>{0603F166-35B8-469F-8123-E8D87BEDC171}</unversioned-pdf>
        <unversioned-zip>{4F4A3A3B-239F-4988-98E1-DA3779749CBC}</unversioned-zip>
        <versioned-audio>{E19A2758-F802-4FDC-B497-5FF7B3BAC54B}</versioned-audio>
        <versioned-doc>{3DB3A3CA-A0A9-4228-994B-F70C8E99A1CE}</versioned-doc>
        <versioned-document>{2A130D0C-A2A9-4443-B418-917F857BF6C9}</versioned-document>
        <versioned-docx>{F57FB07D-332A-4934-AA67-0A629C5396E2}</versioned-docx>
        <versioned-file>{611933AC-CE0C-4DDC-9683-F830232DB150}</versioned-file>
        <versioned-flash>{2E16714D-8406-4445-98B7-CD70F658611B}</versioned-flash>
        <versioned-image>{C97BA923-8009-4858-BDD5-D8BE5FCCECF7}</versioned-image>
        <versioned-jpeg>{EB3FB96C-D56B-4AC9-97F8-F07B24BB9BF7}</versioned-jpeg>
        <versioned-movie>{374D3A99-C098-4CD2-8FBC-DC2D1CA1C904}</versioned-movie>
        <versioned-mp3>{2449F96D-620E-4E8A-A3E0-D354F78BBD73}</versioned-mp3>
        <versioned-pdf>{CC80011D-8EAE-4BFC-84F1-67ECD0223E9E}</versioned-pdf>
        <versioned-zip>{1743421C-0D7F-4870-9F7B-70E6F0B63308}</versioned-zip>
      </mediaItemTemplateIds>
    </fieldmigrator>
    <pipelines>
      <group groupName="OneNorth.Migrator">
        <pipelines>
          <!-- MIGRATE ITEM PIPELINE
                 This pipeline takes care of making decisions around migrating items.
                 Item data from the source instance is passed into this pipeline.
                 This pipeline runs one item at a time.
            -->
          <migrateItem>
            <!-- SKIP ALREADY PROCESSED
                   This step prevents an item from being processed more than once during a given run.
                   This mainly applies to media items that are referenced multiple times.
                   The media item will only be processed once.
              -->
            <processor type="OneNorth.FieldMigrator.Pipelines.MigrateItem.SkipAlreadyProcessed, OneNorth.FieldMigrator" />
            <!-- CHECK ITEM TEMPLATE 
                   This step confirms the item should be imported based on the Included / Excluded Template IDs from above.
                   The pipeline is aborted if the item should not be migrated.
                   "includeMedia" indicates if all media items should be allowed through.
              -->
            <processor type="OneNorth.FieldMigrator.Pipelines.MigrateItem.CheckItemTemplate, OneNorth.FieldMigrator">
              <includeMedia>true</includeMedia>
            </processor>
            <!-- ENSURE ITEM
                   This step ensures that the item exists.
                   If it does not already exist, it calls the Create Item pipeline to create the item.
                   If "keeyExistingMedia" is set to true, and this is a media item, and the media item already exists, the pipeline is aborted.
                   Optionally, the ID of the item can be remapped using the overrides.
              -->
            <processor type="OneNorth.FieldMigrator.Pipelines.MigrateItem.EnsureItem, OneNorth.FieldMigrator">
              <keepExistingMedia>true</keepExistingMedia>
              <overrides hint="raw:AddOverride">
                <name sourceItemId="{00000000-0000-0000-0000-000000000000}" targetItemId="{00000000-0000-0000-0000-000000000000}" />
              </overrides>
            </processor>
            <!-- MIGRATE LATEST APPROVED VERSION PER LANGUAGE
                   This step determines the latest approved version to process based on langauge.
                   Only one version per language of a given item is migrated to the target instance.
                   This step calls the Migrate Version pipeline with the resulting versions.
              -->
            <processor type="OneNorth.FieldMigrator.Pipelines.MigrateItem.MigrateLatestApprovedVersionPerLanguage, OneNorth.FieldMigrator" />
            <!-- ATTACH UNVERSIONED MEDIA 
                   If this is a media item and it is unversioned, the media itself is downloaded from the source and attached here.
              -->
            <processor type="OneNorth.FieldMigrator.Pipelines.MigrateItem.AttachUnversionedMedia, OneNorth.FieldMigrator" />
          </migrateItem>
          <!-- CREATE ITEM PIPELINE
                 The Create Item pipeline takes care of creating the Item node when it does not already exist.
                 No langauge versions are created in this pipeline.
            -->
          <createItem>
            <!-- RESOLVE PARENT
                   This step attempts to find the parent for the item it is about to create.
                   The parent id is based on the parent id coming from the source instance.
                   Optionally, the ParentID for the item can be remapped using the overrides.
              -->
            <processor type="OneNorth.FieldMigrator.Pipelines.CreateItem.ResolveParent, OneNorth.FieldMigrator">
              <overrides hint="raw:AddOverride">
                <name sourceParentId="{00000000-0000-0000-0000-000000000000}" targetParentId="{00000000-0000-0000-0000-000000000000}" />
              </overrides>
            </processor>
            <!-- RESOLVE TEMPLATE 
                   This step attempts to resolve the template for the item it is about to create.
                   The template id is based on the template id coming from the source instance.
                   Optionally, the Template ID for the item can be remapped using the overrides.
                   By setting MediaManagerDecidesMediaItemTemplates, the media manager will determine the correct template to use regardless of the template in the source instance.
                      This is beneficial if the templates are being switched from/to versioned/unversioned globally.
              -->
            <processor type="OneNorth.FieldMigrator.Pipelines.CreateItem.ResolveTemplate, OneNorth.FieldMigrator">
              <MediaManagerDecidesMediaItemTemplates>true</MediaManagerDecidesMediaItemTemplates>
              <overrides hint="raw:AddOverride">
                <name sourceTemplateId="{00000000-0000-0000-0000-000000000000}" targetTemplateId="{00000000-0000-0000-0000-000000000000}" />
              </overrides>
            </processor>
            <!-- ENSURE FOLDERS 
                   If the parent could not be found, this step will automatically create the parent(s) using folders based on the path from the source instance.
                   The folders will be created in the specified default language.
              -->
            <processor type="OneNorth.FieldMigrator.Pipelines.CreateItem.EnsureFolders, OneNorth.FieldMigrator">
              <defaultLanguage>en</defaultLanguage>
            </processor>
            <!-- CREATE ITEM
                   The item is created in this step based on the Parent and Template determined previously.
              -->
            <processor type="OneNorth.FieldMigrator.Pipelines.CreateItem.CreateItem, OneNorth.FieldMigrator" />
          </createItem>
          <!-- MIGRATE VERSION PIPELINE
                 This pipeline handles migrating the language version of the item.
            -->
          <migrateVersion>
            <!-- ENSURE LANGUAGE VERSION
                   This step will ensure the language version of the item exists.
                   If it does not exist, it will create it.
                   Optionally, the language for the version can be remapped using the overrides.
                   Note: the language needs to be manually created at the global level. sitecore/system/langauges
                   This pipeline is run per version.
              -->
            <processor type="OneNorth.FieldMigrator.Pipelines.MigrateVersion.EnsureLanguageVersion, OneNorth.FieldMigrator">
              <overrides hint="raw:AddOverride">
                <name sourceLanguageName="" targetLanguageName="" />
              </overrides>
            </processor>
            <!-- BEGIN EDIT 
                   Begins the edit context
              -->
            <processor type="OneNorth.FieldMigrator.Pipelines.MigrateVersion.BeginEdit, OneNorth.FieldMigrator" />
            <!-- MIGRATE FIELDS
                   This steps calls the Migrate Fields pipeline.
              -->
            <processor type="OneNorth.FieldMigrator.Pipelines.MigrateVersion.MigrateFields, OneNorth.FieldMigrator" />
            <!-- FINALIZE WORKFLOW 
                   Based on the workflow status of the source instance, that state is set on the target instance.
                   If no workflow exists in the target, this step is skipped.
              -->
            <processor type="OneNorth.FieldMigrator.Pipelines.MigrateVersion.FinalizeWorkflow, OneNorth.FieldMigrator" />
            <!-- END EDIT
                   Ends the edit context and commits the changes.
              -->
            <processor type="OneNorth.FieldMigrator.Pipelines.MigrateVersion.EndEdit, OneNorth.FieldMigrator"/>
            <!-- ATTACH VERSIONED MEDIA 
                   If this is a media item and it is versioned, the media itself is downloaded from the source and attached here.
                   Only the versions specified in the supported Langauges will be attached.
              -->
            <processor type="OneNorth.FieldMigrator.Pipelines.MigrateVersion.AttachVersionedMedia, OneNorth.FieldMigrator">
              <supportedLanguages hint="list:AddSupportedLanguage">
                <language>en</language>
              </supportedLanguages>
            </processor>
          </migrateVersion>
          <!-- MIGRATE FIELD PIPELINE
                 This pipeline handles migrating fields one by one.
                 This pipeline is run per field.
            -->
          <migrateField>
            <!-- SKIP FIELDS
                   This step allows the configruation of fields to skip.
                   The field id or name can be specified here.
                   Use this to prevent fields from being migrated.
              -->
            <processor type="OneNorth.FieldMigrator.Pipelines.MigrateField.SkipFields, OneNorth.FieldMigrator">
              <fields hint="list:AddField">
                <field></field>
              </fields>
            </processor>
            <!-- SKIP MEDIA FIELDS
                   This step skips all media fields except the ones specified in the exceptions.
              -->
            <processor type="OneNorth.FieldMigrator.Pipelines.MigrateField.SkipMediaFields, OneNorth.FieldMigrator">
              <exceptions hint="list:AddException">
                <field>Alt</field>
                <field>Extension</field>
                <field>File Path</field>
              </exceptions>
            </processor>
            <!-- SKIP STANDARD FIELDS
                   This step skips all standard fields, except the ones specified in the exceptions.
              -->
            <processor type="OneNorth.FieldMigrator.Pipelines.MigrateField.SkipStandardFields, OneNorth.FieldMigrator">
              <exceptions hint="list:AddException">
                <field>__Display name</field>
                <field>__Hidden</field>
                <field>__Hide version</field>
                <field>__Never publish</field>
                <field>__Sortorder</field>
                <field>__Valid from</field>
                <field>__Valid to</field>
              </exceptions>
            </processor>
            <!-- RESOLVE FIELD
                   This step tries to find the field to update.
                   Optionally, the field id can be remapped using the overrides.
                      This can be by template if specified.
              -->
            <processor type="OneNorth.FieldMigrator.Pipelines.MigrateField.ResolveField, OneNorth.FieldMigrator">
              <overrides hint="raw:AddOverride">
                <override name="name" sourceFieldId="{00000000-0000-0000-0000-000000000000}" sourceTemplateIds="" targetFieldId="{00000000-0000-0000-0000-000000000000}"  />
              </overrides>
            </processor>
            <!-- COPY VALUE
                   Copies the value from the source field to the target field
                   Note: this is just a straight copy.  No tranform occurs.
              -->
            <processor type="OneNorth.FieldMigrator.Pipelines.MigrateField.CopyValue, OneNorth.FieldMigrator" />
            <!-- PROCESS MEDIA
                   This step detects referenced media.  If it finds it, it sends the media through the migration process.
                   This has the impact of importing all media that is realted to the items being migrated.
              -->
            <processor type="OneNorth.FieldMigrator.Pipelines.MigrateField.ProcessMedia, OneNorth.FieldMigrator" />
          </migrateField>
        </pipelines>
      </group>
    </pipelines>

    <!-- PERFORMANCE IMPROVEMNTS
           The following configuration will improve the performance while the migration runs.
           Only include this confiuration when the migration runs so normal processing is not impacted.
      -->
    
    <databases>
      <database id="master">
        <Engines.HistoryEngine.Storage>
          <patch:delete/>
        </Engines.HistoryEngine.Storage>
      </database>
    </databases>

    <events>
      <event name="item:copied">
        <handler type="Sitecore.Links.ItemEventHandler, Sitecore.Kernel" method="OnItemCopied">
          <patch:delete/>
        </handler>
      </event>
      <event name="item:deleted">
        <handler type="Sitecore.Links.ItemEventHandler, Sitecore.Kernel" method="OnItemDeleted">
          <patch:delete/>
        </handler>
      </event>
      <event name="item:saved">
        <handler type="Sitecore.Links.ItemEventHandler, Sitecore.Kernel" method="OnItemSaved">
          <patch:delete/>
        </handler>
      </event>
    </events>
  </sitecore>
</configuration>

